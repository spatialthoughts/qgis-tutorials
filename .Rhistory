}
summer(c(1,2,3,4,6))
summer<-function(vec){
re<-c()
for (ele in vec){
if (ele%%3 != 0){
re<-append(ele,re)
}
}
return(sum(re))
}
summer(c(1,2,3,4,6))
summer(c(3,3,3,3))
r<-1:25
print(r)
print(class(r)
print(class(r))
class(r)
print(r[0])
print(r[25])
print(r)
prime_check<-function(num){
ch<-1:num
for (ele in ch){
if (num%%ele == 0){
return(paste("The ",num," is Prime Number!"))
}
}return(paste("The ",num," is not Prime Number!"))
}
prime_check(5)
prime_check <- function(num){
ch<-1:num
for (ele in ch){
if (num%%ele == 0){
return(paste("The ",num," is Prime Number!"))
}
}return(paste("The ",num," is not Prime Number!"))
}
prime_check <- function(num){
ch<-1:num
for (ele in ch){
if (num%%ele == 0){
return(paste("The ",num," is Prime Number!"))
}
}
return(paste("The ",num," is not Prime Number!"))
}
prime_check(5)
prime_check(50)
prime_check <- function(num){
ch<-1:num
for (ele in ch){
if ((num%%ele == 0)&&(ele>1)){
return(paste("The ",num," is Prime Number!"))
}
}
return(paste("The ",num," is not Prime Number!"))
}
prime_check(50)
prime_check <- function(num){
ch<-1:num
for (ele in ch){
if ((num%%ele == 0)&&(ele>1)){
return(paste("The ",num," is not Prime Number!"))
}
}
return(paste("The ",num," is Prime Number!"))
}
prime_check(50)
prime_check(5)
prime_check <- function(num){
n<=num-1
ch<-1:n
for (ele in ch){
if ((num%%ele == 0)&&(ele>1)){
return(paste("The ",num," is not Prime Number!"))
}
}
return(paste("The ",num," is Prime Number!"))
}
prime_check(5)
prime_check <- function(num){
n<-num-1
ch<-1:n
for (ele in ch){
if ((num%%ele == 0)&&(ele>1)){
return(paste("The ",num," is not Prime Number!"))
}
}
return(paste("The ",num," is Prime Number!"))
}
prime_check(5)
prime_check(50)
prime_check(131)
prime_check(237)
prime_check <- function(num){
for (ele in 1:(num-1)){
if ((num%%ele == 0)&&(ele>1)){
return(paste("The ",num," is not Prime Number!"))
}
}
return(paste("The ",num," is Prime Number!"))
}
prime_check(237)
prime_check(2)
prime_check(1)
prime_check(-50)
v<-c(1:5)
print(v)
v<1:5
v<-1:5
print(v)
lappy(v,addrand)
l<-lappy(v,addrand)
l<-lapply(v,addrand)
#APPLY
addrand<-function(num){
ran<-sample(1:100,1)
return(ran+num)
}
l<-lapply(v,addrand)
s<-sapply(v, addrand)
va<-vapply(v, addrand)
print(l)
print(s)
c="31,Mar,1995"
my.date=as.Date(c)
my.date<-as.date(c,format="%d,%b,%Y")
my.date<-as.date("31,Mar,1995",format="%d,%b,%Y")
Sys.Date()
c="1995-03-31"
my.date<-as.date(c)
my.date<-as.Date(c)
my.date<-as.Date("31,Mar,1995",format="%d,%b,%Y")
my.date
strptime("24:56:30",format="%H:%M:%S")
strptime("24:56:30",format="%h:%m:%s")
help(strptime)
strptime("24:56:30",format="%H:%M:%S")
strptime("12:56:30",format="%H:%M:%S")
strptime("23:56:30",format="%H:%M:%S")
strptime("24:56:30",format="%I:%M:%S")
install.packages(dplyr)
install.packages('dplyr')
install.packages('nycflights13')
head(flights)
library(dplyr)
library(nycflights13)
tail(flights)
summary(flights)
flights[flights[carrier]]
flights.carrier
flights$carrier
head(flights$flight)
head(flights$distance)
summarise(flights$origin)
summary(flights$origin)
flights[flights$air_time]
fliter(flights,air_time==20)
> fliter(flights,air_time<100)
flights$air_time
min(flights$air_time)
max(flights$air_time)
class(flights$air_time)
library(dplyr)
filter(flights,air_time<=50)
head(flights,air_time<=20)
head(filter(flights,air_time<=20))
filter(flights,air_time==50)
slice(flights.1:10)
slice(flights,1:10)
slice(flights,5)
slice(flights,min(flights$air_time))
min(flights$air_time)
slice(flights,flights$air_time==20)
slice(flights,flights$air_time=20)
slice(flights,flights$air_time==50)
slice(flights$air_time,5)
slice(flights,3:19)
head(arrange(flights,year,month,day,air_time))
head(arrange(flights,year,month,day,arr_delay))
head(arrange(flights,year,month,day,desc(arr_delay)))
head(arrange(flights,desc(arr_delay)))
l1<-select(flights,carrier,arr_delay)
l1
sort(l1,arr_delay)
arrange(l1,arr_delay)
library(dplyr)
df<-mtcars
select(mtcars,mpg>6,cyl==6)
filter(mtcars,mpg>5,cyl==6)
filter(mtcars,mpg>20,cyl==6)
arrange(filter(mtcars,mpg>20,cyl==6),cyl,desc(wt))
head(arrange(mtcars,cyl,desc(wt)))
head(select(mtcars,mpg,hp))
distinct(select(mtcars,gear))
mutate(mtcars,performance=hp/wt)
head(mutate(mtcars,performance=hp/wt))
head(round(mutate(mtcars,performance=hp/wt),2))
summarise(mtcars,mean(mpg,is.na=T))
summarise((mtcars,avg_mpg=mean(mpg,is.na=T)))
summarise(mtcars,avg_mpg=mean(mpg,is.na=T))
std_hp<-mtcars %>% cyl==6 %>% mean(hp,is.na=T)
std_hp <- filter(mtcars,cyl==6) %>% mean(hp,is,na=T)
std_hp <- filter(mtcars,cyl==6) %>% mean(hp,is.na=T)
std_hp <- filter(mtcars,cyl==6) %>% mean(hp)
std_hp <- filter(mtcars,cyl==6) %>% summarise(mean(hp,is,na=T))
std_hp <- filter(mtcars,cyl==6) %>% summarise(mean(hp))
std_hp
std_hp <- filter(mtcars,cyl==6) %>% summarise(avg_hp=mean(hp,is.na=T))
std_hp
mtcars %>% filter(cyl==6) %>% summarise(avg_hp = mean(hp))
install.packages('tydyr')
install.packages('tidyr')
install.packages('data.table')
library(tidyr)
library(data.table)
#tidyr
q1<-runif(9,min=0,max<-100)
q1
q4 <- runif(9, min=0, max=100)
source('C:/Users/User/Desktop/PyStart/Udemy/r prog/My prog log/DataFrame_Exercise.R', echo=TRUE)
#tidyr
q1<-runif(9,min=0,max<-100)
source('C:/Users/User/Desktop/PyStart/Udemy/r prog/My prog log/DataFrame_Exercise.R', echo=TRUE)
df<-data.frame(company=comp,year=yr,Qtr1=q1,Qtr2=q2,Qtr3=q3)
df
df<-data.frame(company=comp,year=yr,Qtr1=q1,Qtr2=q2,Qtr3=q3,Qtr=q4)
df
gather(df,Quater,Revenue,Qtr1:Qtr4)
df<-data.frame(company=comp,year=yr,Qtr1=q1,Qtr2=q2,Qtr3=q3,Qtr4=q4)
df
gather(df,Quater,Revenue,Qtr1:Qtr4)
library(ggplot2)
install.packages('installer')
install.packages("installr")
library(installr)
updateR()
updateR()
library(installr)
install.packages('installr')
install.packages('installr')
library(installr)
updateR()
install.packages('ggplot2')
install.packages('ggplot2')
library(ISLR)
library(ggplot2)
library(dplyr)
library(caTools)
head(College)
data(ISLR)
data("College")
df <-data.frame(College)
head(df)
str(df)
#EDA
#Create a scatterplot of Grad.Rate versus Room.Board, colored by the Private column.
ggplot(df,aes(y=Grad.Rate,x=Room.Board))+geom_point(aes(color=Private))
ggplot(df,aes(Room.Board,Grad.Rate)) + geom_point(aes(color=Private))
ggplot(df,aes(x=Private))+geom_histogram()+facet_wrap(df)
ggplot(df,aes(x=Private))+geom_histogram()
ggplot(df,aes(Private))+geom_histogram()
rlang::last_error()
ggplot(df,aes(Private))+geom_histogram(aes(color=Grad.Rate))
ggplot(df,aes(Private),na.rm=T)+geom_histogram(aes(color=Grad.Rate))
ggplot(df,aes(Private))+geom_bar(aes(color=Grad.Rate))
ggplot(df,aes(Private))+geom_bar(aes(fill=Grad.Rate))
ggplot(df,aes(x=Private,y=Grad.Rate))+geom_bar(aes(fill=Grad.Rate))
ggplot(df,aes(x=Private,y=Grad.Rate))+geom_bar()
ggplot(df,aes(x=Private)+geom_bar()
ggplot(df,aes(x=Private)+geom_bar()
ggplot(df,aes(x=Private)+geom_bar()
ggplot(df,aes(x=Private))+geom_bar()
ggplot(df,aes(x=Private))+geom_bar()
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap()
?facet_wrap
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(Private))
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(df))
names(df)
cols<-names(df)
cols
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(cols))
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(Apps))
cols[0]
cols[1]
length(cols)
for (i in 1:length(cols)){
dummy <- cols[i]
ggplot(df,aes(x=Private,y=dummy))+geom_bar()
}
print(i)
x<-length(cols)
for (i in 1:x){
print(i)
dummy <- cols[i]
ggplot(df,aes(x=Private,y=dummy))+geom_bar()
}
print(dummy)
for (i in 1:x){
dummy <- cols[i]
print(dummy)
ggplot(df,aes(x=Private,y=dummy))+geom_bar()
}
ggplot(df,aes(x=Private,y=Grad.Rate))+geom_bar()
ggplot(df,aes(x=Private,y=Grad.Rate))+geom_point()
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(~.)
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(.~)
ggplot(df,aes(x=Private))+geom_bar()
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(cols~.))
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(cols))
cols<- list(cols)
ggplot(df,aes(x=Private))+geom_bar()+facet_wrap(vars(cols))
ggplot(df,aes(x=Private,y=Grad.Rate))+geom_bar()
ggplot(df,aes(x=Private,y=Grad.Rate))+geom_point()
ggplot(df,aes(y=Outstate,x=Grad.Rate))+geom_point(aes(color=Private))
ggplot(df,aes(y=Accept,x=Grad.Rate))+geom_point(aes(color=Private))
ggplot(df,aes(y=Apps,x=Accept))+geom_point(aes(color=Private))
ggplot(df,aes(y=Apps,x=Top10perc))+geom_point(aes(color=Private))
ggplot(df,aes(y=Apps,x=Top25perc))+geom_point(aes(color=Private))
ggplot(df,aes(y=Apps,x=F.Undergrad))+geom_point(aes(color=Private))
ggplot(df,aes(y=Apps,x=P.Undergrad))+geom_point(aes(color=Private))
ggplot(df,aes(y=P.Undergrad,x=P.Undergrad))+geom_point(aes(color=Private))
ggplot(df,aes(y=F.Undergrad,x=P.Undergrad))+geom_point(aes(color=Private))
ggplot(df,aes(y=Books,x=P.Undergrad))+geom_point(aes(color=Private))
ggplot(df,aes(y=Books,x=Expend))+geom_point(aes(color=Private))
ggplot(df,aes(y=Grad.Rate,x=Expend))+geom_point(aes(color=Private))
ggplot(df,aes(y=Grad.Rate,x=S.F.Ratio))+geom_point(aes(color=Private))
ggplot(df,aes(y=Apps,x=S.F.Ratio))+geom_point(aes(color=Private))
ggplot(df,aes(y=Expend,x=Personal))+geom_point(aes(color=Private))
ggplot(df,aes(y=Grad.Rate,x=Personal))+geom_point(aes(color=Private))
ggplot(df,aes(y=Expend,x=perc.alumni))+geom_point(aes(color=Private))
ggplot(df,aes(y=Grad.Rate,x=Room.Board))+geom_point(aes(color=Private))
ggplot(df,aes(F.Undergrad,fill=Private))+geom_histogram()
ggplot(df,aes(F.Undergrad,fill=Private))+geom_histogram(color='black')
ggplot(df,aes(F.Undergrad,fill=Private))+geom_histogram(binwidth=1,color='black')
ggplot(df,aes(F.Undergrad,fill=Private))+geom_histogram(bins=50,color='black')
ggplot(df,aes(F.Undergrad)) + geom_histogram(aes(fill=Private),color='black',bins=50)
ggplot(df,aes(Grad.Rate)) + geom_histogram(aes(fill=Private),color='black',bins=50)
select(df,Grad.Rate>100)
select(df,df$Grad.Rate>100)
subset(df,df$Grad.Rate>100)
subset(df,df$Grad.Rate>100)
subset(df,df$Grad.Rate>100)
subset(df,df$Grad.Rate>100)
subset(df,df$Grad.Rate>100)
df['Cazenovia College']
df[,Cazenovia College]
df[,'Cazenovia College']
head()
head(df)
df[Cazenovia College,]
df[Cazenovia College,]
df['Cazenovia College',]
df['Cazenovia College',"Grad.Rate"]
df['Cazenovia College',"Grad.Rate"] <- 100
df['Cazenovia College',"Grad.Rate"]
df['Cazenovia College',"Grad.Rate"]
#
sapmle <- sample(df$Private,SplitRatio=.07)
#
sapmle <- sample.split(df$Private,SplitRatio=.07)
#
set.seed(101)
sapmle <- sample.split(df$Private,SplitRatio=.07)
train <- subset(df,sample == T)
#
set.seed(101)
sample <- sample.split(df$Private,SplitRatio=.07)
train <- subset(df,sample == T)
test <- subset(df,sample == F)
library(rpart)
library(rpart.plot)
#
tree <- rpart(Private~.,method='class',data = College)
#
tree <- rpart(Private~.,method='class',data = train)
library(randomForest)
tree.preds <- predict(tree,test)
heaad(tree.preds)
head(tree.preds)
tree.preds$Yes
tree.preds <- as.data.frame(tree.preds)
ttree.preds$Yes
tree.preds <- as.data.frame(tree.preds)
# Lots of ways to do this
joiner <- function(x){
if (x>=0.5){
return('Yes')
}else{
return("No")
}
}
tree.preds$Private <- sapply(tree.preds$Yes,joiner)
head(tree.preds)
tree.preds$Yes
# Introduction to NumPy
![NumPy Logo](images/python_foundation/numpy2.png)
install.packages("installr")
updateR()
unlink('F:/ACIWRM/aciwrm/essential_qgis/Georeferencing_cache', recursive = TRUE)
knitr::include_graphics('images/mapmaking/ex1/img04.png')
knitr::include_graphics('images/mapmaking/ex2/img08.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img01.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img02.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img03.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img04.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img05.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img06.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img07.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img08.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img09.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img10.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img01.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img02.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img03.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img04.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img05.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img06.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img07.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img08.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img09.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img10.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img11.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img12.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img13.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img14.png')
knitr::include_graphics('Images/georeferencing_maps/ex1/img15.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img01.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img02.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img03.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img04.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img05.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img06.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img07.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img08.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img09.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img10.png')
knitr::include_graphics('Images/georeferencing_maps/ex2/img11.png')
knitr::include_graphics('Images/spatial_join/img28.png')
knitr::include_graphics('Images/spatial_join/img27.png')
knitr::include_graphics('Images/spatial_join/img01.png')
knitr::include_graphics('Images/multi_criteria_overlay/img01.png')
knitr::include_graphics('Images/multi_criteria_overlay/img01.png')
knitr::include_graphics('Images/multi_criteria_overlay/img02.png')
knitr::include_graphics('Images/multi_criteria_overlay/img03.png')
knitr::include_graphics('Images/multi_criteria_overlay/img04.png')
knitr::include_graphics('Images/multi_criteria_overlay/img05.png')
knitr::include_graphics('Images/multi_criteria_overlay/img06.png')
knitr::include_graphics('Images/multi_criteria_overlay/img07.png')
knitr::include_graphics('Images/multi_criteria_overlay/img08.png')
knitr::include_graphics('Images/multi_criteria_overlay/img09.png')
knitr::include_graphics('Images/multi_criteria_overlay/img10.png')
knitr::include_graphics('Images/multi_criteria_overlay/img11.png')
knitr::include_graphics('Images/multi_criteria_overlay/img12.png')
knitr::include_graphics('Images/multi_criteria_overlay/img13.png')
knitr::include_graphics('Images/multi_criteria_overlay/img14.png')
knitr::include_graphics('Images/multi_criteria_overlay/img15.png')
knitr::include_graphics('Images/multi_criteria_overlay/img16.png')
knitr::include_graphics('Images/multi_criteria_overlay/img17.png')
knitr::include_graphics('Images/multi_criteria_overlay/img12.png')
knitr::include_graphics('Images/multi_criteria_overlay/img18.png')
knitr::include_graphics('Images/catchment_delineation/img01.png')
knitr::include_graphics('Images/catchment_delineation/img02.png')
knitr::include_graphics('Images/catchment_delineation/img03.png')
knitr::include_graphics('Images/catchment_delineation/img04.png')
knitr::include_graphics('Images/catchment_delineation/img05.png')
knitr::include_graphics('Images/catchment_delineation/img06.png')
knitr::include_graphics('Images/catchment_delineation/img07.png')
knitr::include_graphics('Images/catchment_delineation/img08.png')
knitr::include_graphics('Images/catchment_delineation/img14.png')
knitr::include_graphics('Images/catchment_delineation/img10.png')
knitr::include_graphics('Images/catchment_delineation/img11.png')
knitr::include_graphics('Images/catchment_delineation/img12.png')
knitr::include_graphics('Images/catchment_delineation/img13.png')
knitr::include_graphics('Images/catchment_delineation/img14.png')
knitr::include_graphics('Images/catchment_delineation/img15.png')
knitr::include_graphics('Images/catchment_delineation/img16.png')
knitr::include_graphics('Images/catchment_delineation/img17.png')
knitr::include_graphics('Images/catchment_delineation/img18.png')
knitr::include_graphics('Images/catchment_delineation/img19.png')
knitr::include_graphics('Images/catchment_delineation/img20.png')
knitr::include_graphics('Images/catchment_delineation/img21.png')
knitr::include_graphics('Images/catchment_delineation/img22.png')
knitr::include_graphics('Images/catchment_delineation/img23.png')
knitr::include_graphics('Images/catchment_delineation/img24.png')
knitr::include_graphics('Images/catchment_delineation/img25.png')
knitr::include_graphics('Images/catchment_delineation/img26.png')
knitr::include_graphics('Images/catchment_delineation/img09.png')
knitr::include_graphics('images/advanced_qgis/batch1.png')
knitr::include_graphics('images/advanced_qgis/batch2.png')
knitr::include_graphics('images/advanced_qgis/batch3.png')
knitr::include_graphics('images/advanced_qgis/batch4.png')
knitr::include_graphics('images/advanced_qgis/batch5.png')
knitr::include_graphics('images/advanced_qgis/batch6.png')
knitr::include_graphics('images/advanced_qgis/batch7.png')
knitr::include_graphics('images/advanced_qgis/batch8.png')
knitr::include_graphics('images/advanced_qgis/batch9.png')
knitr::include_graphics('images/advanced_qgis/karnataka9.png')
knitr::include_graphics('images/spatial_data_viz/aq_naqi.png')
knitr::include_graphics('images/spatial_data_viz/aq8.png')
knitr::include_graphics('images/spatial_data_viz/aq7.png')
knitr::include_graphics('images/spatial_data_viz/aq9.png')
knitr::include_graphics('images/spatial_data_viz/aq10.png')
knitr::include_graphics('images/spatial_data_viz/aq11.png')
knitr::include_graphics('images/spatial_data_viz/aq12.png')
knitr::include_graphics('images/spatial_data_viz/aq1.png')
knitr::include_graphics('images/spatial_data_viz/aq2.png')
knitr::include_graphics('images/spatial_data_viz/aq3.png')
knitr::include_graphics('images/spatial_data_viz/aq4.png')
knitr::include_graphics('images/spatial_data_viz/aq6.png')
setwd("F:/Spatialthoughts/QGIStutorial/qgis-tutorials")
